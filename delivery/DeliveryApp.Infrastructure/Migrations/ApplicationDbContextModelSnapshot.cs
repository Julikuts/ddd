// <auto-generated />
using System;
using DeliveryApp.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DeliveryApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeliveryApp.Core.Domain.CourierAggregate.Courier", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("CourierStatus")
                        .HasColumnType("integer")
                        .HasColumnName("courierstatus");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("transport_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("transport_id");

                    b.ToTable("couriers", (string)null);
                });

            modelBuilder.Entity("DeliveryApp.Core.Domain.CourierAggregate.CourierStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("courier_statuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "notavailable"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ready"
                        },
                        new
                        {
                            Id = 3,
                            Name = "busy"
                        });
                });

            modelBuilder.Entity("DeliveryApp.Core.Domain.CourierAggregate.Transport", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("transports", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pedestrian"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bicycle"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Scooter"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Car"
                        });
                });

            modelBuilder.Entity("DeliveryApp.Core.Domain.OrderAggregate.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("CourierId")
                        .HasColumnType("uuid")
                        .HasColumnName("courier_id");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer")
                        .HasColumnName("orderstatus");

                    b.HasKey("Id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("DeliveryApp.Core.Domain.OrderAggregate.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("order_statuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "created"
                        },
                        new
                        {
                            Id = 2,
                            Name = "assigned"
                        },
                        new
                        {
                            Id = 3,
                            Name = "completed"
                        });
                });

            // modelBuilder.Entity("DeliveryApp.Core.Domain.CourierAggregate.Courier", b =>
            //     {
            //         b.HasOne("DeliveryApp.Core.Domain.CourierAggregate.Transport", "Transport")
            //             .WithMany()
            //             .HasForeignKey("transport_id")
            //             .OnDelete(DeleteBehavior.Cascade)
            //             .IsRequired();

            //         b.OwnsOne("DeliveryApp.Core.Domain.SharedKernel.Location", "Location", b1 =>
            //             {
            //                 b1.Property<Guid>("CourierId")
            //                     .HasColumnType("uuid");

            //                 b1.Property<int>("X")
            //                     .HasColumnType("integer")
            //                     .HasColumnName("location_x");

            //                 b1.Property<int>("Y")
            //                     .HasColumnType("integer")
            //                     .HasColumnName("location_y");

            //                 b1.HasKey("CourierId");

            //                 b1.ToTable("couriers");

            //                 b1.WithOwner()
            //                     .HasForeignKey("CourierId");
            //             });

            //         b.Navigation("Location");

            //         b.Navigation("Transport");
            //     });

            modelBuilder.Entity("DeliveryApp.Core.Domain.OrderAggregate.Order", b =>
                {
                    b.OwnsOne("DeliveryApp.Core.Domain.SharedKernel.Location", "Location", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("uuid");

                            b1.Property<int>("X")
                                .HasColumnType("integer")
                                .HasColumnName("location_x");

                            b1.Property<int>("Y")
                                .HasColumnType("integer")
                                .HasColumnName("location_y");

                            b1.HasKey("OrderId");

                            b1.ToTable("orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.OwnsOne("DeliveryApp.Core.Domain.SharedKernel.Weight", "Weight", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("uuid");

                            b1.Property<int>("WeightValue")
                                .HasColumnType("integer")
                                .HasColumnName("weight");

                            b1.HasKey("OrderId");

                            b1.ToTable("orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.Navigation("Location");

                    b.Navigation("Weight");
                });
#pragma warning restore 612, 618
        }
    }
}
